{"ast":null,"code":"var _jsxFileName = \"/Users/ingridlarsson/my-map/src/App.js\";\nimport React, { Component, Fragment } from \"react\";\nimport GoogleMap from \"google-map-react\";\nimport myPlaces from \"./data.json\";\nimport { Button, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport AddPlaceForm from \"./components/AddPlaceForm\";\nimport List from \"./components/List\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport isEmpty from \"lodash.isempty\";\nimport \"./App.css\";\n\nconst InfoWindow = props => {\n  const {\n    place\n  } = props;\n  const infoWindowStyle = {\n    position: \"relative\",\n    bottom: 70,\n    left: \"-110px\",\n    width: 220,\n    backgroundColor: \"white\",\n    boxShadow: \"0 2px 7px 1px rgba(0, 0, 0, 0.3)\",\n    padding: 10,\n    fontSize: 14,\n    zIndex: 100,\n    textAlign: \"center\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: infoWindowStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontSize: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, place.name));\n};\n\nconst Marker = props => {\n  const markerStyle = {\n    border: \"1px solid white\",\n    borderRadius: \"50%\",\n    height: 12,\n    width: 12,\n    backgroundColor: props.show ? \"#6666FF\" : \"#282866\",\n    cursor: \"pointer\",\n    zIndex: 10\n  };\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: markerStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), props.show && /*#__PURE__*/React.createElement(InfoWindow, {\n    place: props.place,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 22\n    }\n  }));\n};\n\nclass MyMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onMapClicked = ({\n      lat,\n      lng\n    }) => {\n      this.openInputForm(lat, lng);\n    };\n\n    this.openInputForm = (lat, lng) => {\n      this.setState({\n        inputFormOpen: true,\n        newlat: lat,\n        newlng: lng\n      });\n    };\n\n    this.onAddPlace = name => {\n      this.setState({\n        id: this.state.myPlaces.length + 1\n      });\n      const newPlace = {\n        id: '\"' + this.state.id + '\"',\n        name: name,\n        geo: {\n          lat: this.state.newlat,\n          lng: this.state.newlng\n        }\n      };\n      this.setState({\n        inputFormOpen: false,\n        myPlaces: this.state.myPlaces.concat(newPlace)\n      });\n      return myPlaces;\n    };\n\n    this.onChildClickCallback = (key, childProps) => {\n      this.setState(state => {\n        const a = state.myPlaces.findIndex(e => e.id === key);\n        state.myPlaces[a].show = !state.myPlaces[a].show;\n        return {\n          myPlaces: state.myPlaces\n        };\n      });\n    };\n\n    this.onListItemClick = (center, zoom, show) => {\n      this.setState({\n        center: center,\n        zoom: zoom,\n        show: true\n      });\n    };\n\n    this.state = {\n      center: [59.334591, 18.06324],\n      zoom: 11,\n      myPlaces: [],\n      inputForm: false,\n      newlat: null,\n      newlng: null\n    };\n    this.onAddPlace = this.onAddPlace.bind(this);\n    this.onListItemClick = this.onListItemClick.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"data.json\").then(response => response.json()).then(data => {\n      data.forEach(place => {\n        place.show = false;\n      });\n      this.setState({\n        myPlaces: data\n      });\n    });\n  }\n\n  render() {\n    const listitem = this.state.myPlaces.slice(10, 20).map(place => /*#__PURE__*/React.createElement(List, {\n      onListItemClick: this.onListItemClick.bind(this),\n      place: place,\n      show: place.show,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100vh\",\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, this.state.inputFormOpen && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"add-place-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(AddPlaceForm, {\n      onAddPlace: this.onAddPlace,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    })), !isEmpty(listitem) && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"saved-place-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, \"Dina sparade platser\"), listitem), !isEmpty(myPlaces) && /*#__PURE__*/React.createElement(GoogleMap, {\n      bootstrapURLKeys: {\n        key: \"AIzaSyAQqErv6aS94dMloNrjcRxLFdwru1ALebc\"\n      },\n      center: this.state.center,\n      zoom: this.state.zoom,\n      onClick: this.onMapClicked,\n      onChildClick: this.onChildClickCallback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, this.state.myPlaces.map(place => /*#__PURE__*/React.createElement(Marker, {\n      key: place.id,\n      text: place.name,\n      lat: place.geo.lat,\n      lng: place.geo.lng,\n      show: place.show,\n      place: place,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nexport default MyMap;","map":{"version":3,"sources":["/Users/ingridlarsson/my-map/src/App.js"],"names":["React","Component","Fragment","GoogleMap","myPlaces","Button","ListGroup","ListGroupItem","AddPlaceForm","List","GoogleApiWrapper","isEmpty","InfoWindow","props","place","infoWindowStyle","position","bottom","left","width","backgroundColor","boxShadow","padding","fontSize","zIndex","textAlign","name","Marker","markerStyle","border","borderRadius","height","show","cursor","MyMap","constructor","onMapClicked","lat","lng","openInputForm","setState","inputFormOpen","newlat","newlng","onAddPlace","id","state","length","newPlace","geo","concat","onChildClickCallback","key","childProps","a","findIndex","e","onListItemClick","center","zoom","inputForm","bind","componentDidMount","fetch","then","response","json","data","forEach","render","listitem","slice","map"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport GoogleMap from \"google-map-react\";\nimport myPlaces from \"./data.json\";\nimport { Button, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport AddPlaceForm from \"./components/AddPlaceForm\";\nimport List from \"./components/List\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport isEmpty from \"lodash.isempty\";\nimport \"./App.css\";\n\nconst InfoWindow = (props) => {\n  const { place } = props;\n  const infoWindowStyle = {\n    position: \"relative\",\n    bottom: 70,\n    left: \"-110px\",\n    width: 220,\n    backgroundColor: \"white\",\n    boxShadow: \"0 2px 7px 1px rgba(0, 0, 0, 0.3)\",\n    padding: 10,\n    fontSize: 14,\n    zIndex: 100,\n    textAlign: \"center\",\n  };\n\n  return (\n    <div style={infoWindowStyle}>\n      <div style={{ fontSize: 16 }}>{place.name}</div>\n    </div>\n  );\n};\n\nconst Marker = (props) => {\n  const markerStyle = {\n    border: \"1px solid white\",\n    borderRadius: \"50%\",\n    height: 12,\n    width: 12,\n    backgroundColor: props.show ? \"#6666FF\" : \"#282866\",\n    cursor: \"pointer\",\n    zIndex: 10,\n  };\n\n  return (\n    <Fragment>\n      <div style={markerStyle} />\n      {props.show && <InfoWindow place={props.place} />}\n    </Fragment>\n  );\n};\n\nclass MyMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      center: [59.334591, 18.06324],\n      zoom: 11,\n\n      myPlaces: [],\n      inputForm: false,\n\n      newlat: null,\n      newlng: null,\n    };\n\n    this.onAddPlace = this.onAddPlace.bind(this);\n    this.onListItemClick = this.onListItemClick.bind(this);\n  }\n\n  onMapClicked = ({ lat, lng }) => {\n    this.openInputForm(lat, lng);\n  };\n\n  openInputForm = (lat, lng) => {\n    this.setState({\n      inputFormOpen: true,\n      newlat: lat,\n      newlng: lng,\n    });\n  };\n\n  componentDidMount() {\n    fetch(\"data.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        data.forEach((place) => {\n          place.show = false;\n        });\n        this.setState({ myPlaces: data });\n      });\n  }\n\n  onAddPlace = (name) => {\n    this.setState({\n      id: this.state.myPlaces.length + 1,\n    });\n\n    const newPlace = {\n      id: '\"' + this.state.id + '\"',\n      name: name,\n      geo: {\n        lat: this.state.newlat,\n        lng: this.state.newlng,\n      },\n    };\n\n    this.setState({\n      inputFormOpen: false,\n      myPlaces: this.state.myPlaces.concat(newPlace),\n    });\n\n    return myPlaces;\n  };\n\n  onChildClickCallback = (key, childProps) => {\n    this.setState((state) => {\n      const a = state.myPlaces.findIndex((e) => e.id === key);\n      state.myPlaces[a].show = !state.myPlaces[a].show;\n      return { myPlaces: state.myPlaces };\n    });\n  };\n\n  onListItemClick = (center, zoom, show) => {\n    this.setState({\n      center: center,\n      zoom: zoom,\n      show: true,\n    });\n  };\n\n  render() {\n    const listitem = this.state.myPlaces\n      .slice(10, 20)\n      .map((place) => (\n        <List\n          onListItemClick={this.onListItemClick.bind(this)}\n          place={place}\n          show={place.show}\n        />\n      ));\n\n    return (\n      <div style={{ height: \"100vh\", width: \"100%\" }}>\n        {this.state.inputFormOpen && (\n          <div className=\"add-place-container\">\n            <AddPlaceForm onAddPlace={this.onAddPlace} />\n          </div>\n        )}\n\n        {!isEmpty(listitem) && (\n          <div className=\"saved-place-container\">\n            <span>Dina sparade platser</span>\n            {listitem}\n          </div>\n        )}\n\n        {!isEmpty(myPlaces) && (\n          <GoogleMap\n            bootstrapURLKeys={{\n              key: \"AIzaSyAQqErv6aS94dMloNrjcRxLFdwru1ALebc\",\n            }}\n            center={this.state.center}\n            zoom={this.state.zoom}\n            onClick={this.onMapClicked}\n            onChildClick={this.onChildClickCallback}\n          >\n            {this.state.myPlaces.map((place) => (\n              <Marker\n                key={place.id}\n                text={place.name}\n                lat={place.geo.lat}\n                lng={place.geo.lng}\n                show={place.show}\n                place={place}\n              />\n            ))}\n          </GoogleMap>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default MyMap;\n"]},"metadata":{},"sourceType":"module"}